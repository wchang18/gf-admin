// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"gf-admin/internal/dao/internal"
	"gf-admin/internal/model/entity"
	"github.com/gogf/gf/v2/errors/gerror"
)

// internalRoleDao is internal type for wrapping internal DAO implements.
type internalRoleDao = *internal.RoleDao

// roleDao is the data access object for table role.
// You can define custom methods on it to extend its functionality as you wish.
type roleDao struct {
	internalRoleDao
}

var (
	// Role is globally public accessible object for table role operations.
	Role = roleDao{
		internal.NewRoleDao(),
	}
)

// Fill with you ideas below.

func (dao *roleDao) CreateRole(role *entity.Role) (id int64, err error) {
	res, err := dao.DB().Model(dao.Table()).Data(role).Insert()
	if err != nil {
		return
	}
	id, _ = res.LastInsertId()
	return
}

func (dao *roleDao) CheckRoleExist(code, name string, update bool, id int) bool {
	model := dao.DB().Model(dao.Table())
	if update {
		model = model.Where("id != ?", id)
	}
	num, _ := model.Where("code=? or name=?", code, name).Count()
	return num > 0
}

func (dao *roleDao) UpdateRole(role *entity.Role) (err error) {
	_, err = dao.DB().Model(dao.Table()).Data(role).
		Where("id=?", role.Id).
		Update()
	return
}

func (dao *roleDao) DeleteRole(id int) (err error) {
	_, err = dao.DB().Model(dao.Table()).
		Where("id=?", id).
		Delete()
	return
}

func (dao *roleDao) GetRoleById(id int) (role *entity.Role, err error) {
	err = dao.DB().Model(dao.Table()).
		Where("id=?", id).
		Scan(&role)
	return
}

func (dao *roleDao) GetAllRole() (roleList []*entity.Role, err error) {
	err = dao.DB().Model(dao.Table()).
		Where("status", 1).
		Order("sort asc").
		Scan(&roleList)
	return
}

func (dao *roleDao) GetRoleByCode(code string) (*entity.Role, error) {
	var role *entity.Role
	res, err := dao.DB().Model(dao.Table()).Where("code=?", code).One()
	if err != nil {
		return nil, err
	}
	if res.IsEmpty() {
		return nil, gerror.New("角色不存在")
	}
	res.Struct(&role)
	return role, err
}
